arrange(Total) %>%
select(NOC)
# Plot 1976
ggplot(counts_2016, aes(x=NOC, y=Count, fill=Medal)) +
geom_col() +
coord_flip() +
scale_fill_manual(values=c("gold1","gray70","gold4")) +
ggtitle("Medal counts for women at the 1976 Olympics") +
theme(plot.title = element_text(hjust = 0.5))
counts_2016 <- data %>% filter(Year==2016, !is.na(Medal), Sex=="F") %>%
group_by(NOC, Medal) %>%
summarize(Count=length(Medal))
# ss
counts_2016 <- data %>% filter(Year==2016, !is.na(Medal), Sex=="F") %>%
#sex
# Count number of medals awarded to each NOC at 2016 Olympics
counts_2016 <- data %>% filter(Year==2016, !is.na(Medal), Sex=="F") %>%
summarize(Count=n(Medal))%>%arrange(desc(Count)%>%head(n=30)
# Order NOC by total medal count
levs_2016 <- counts_2016 %>%
group_by(NOC) %>%
summarize(Total=sum(Count)) %>%
arrange(Total) %>%
select(NOC)
counts_2016$NOC <- factor(counts_2016$NOC, levels=levs_2016$NOC)
# Plot 2016
ggplot(counts_2016, aes(x=NOC, y=Count, fill=Medal)) +
geom_col() +
coord_flip() +
scale_fill_manual(values=c("gold1","gray70","gold4")) +
ggtitle("Medal counts for women at the 2016 Olympics") +
theme(plot.title = element_text(hjust = 0.5))
# Count number of medals awarded to each NOC at 2016 Olympics
counts_2016 <- data %>% filter(Year==2016, !is.na(Medal), Sex=="F") %>%
group_by(NOC, Medal) %>%
summarize(Count=length(Medal))
# Count number of medals awarded to each NOC at 2016 Olympics
counts_2016 <- data %>% filter(Year==2016, !is.na(Medal), Sex=="F") %>%
group_by(NOC, Medal) %>%
summarize(Count=length(Medal))
#Top medal get in 2016 Summer
Y <- olympics%>%filter(!is.na(Medal),Season=='Summer', sex=="F")
#Top medal get in 2016 Summer
Y <- olympics%>%filter(!is.na(Medal),Season=='Summer', sex=="F")
Y$notes = NULL
# Load packages
library("plotly")
library("tidyverse")
library("data.table")
library("gridExtra")
library("knitr")
library("directlabels")
# Load athletes_events data
data <- read.csv(file="athlete_events.csv", header=TRUE, sep=",")
noc <- read.csv(file="noc_regions.csv", header=TRUE)
#clean data
#check NA
sum(is.na(data))
sum(is.na(data$Height))
sum(is.na(data$Weight))
sapply(data, class)
sapply(noc,class)
#change the missing values of "Medal" to "DNW" (Did Not Win)
#data$Medal <- as.character(data$Medal)
#data$Medal[is.na(data$Medal)]<- "DNW"
#data$Medal <- as.factor(data$Medal)
#change `ID`, `Name`, `Event`, `NOC` to character, `Height` to numeric, sex and game season in levels
data$ID <- as.character(data$ID)
data$Name <- as.character(data$Name)
data$Event <- as.character(data$Event)
data$NOC <- as.character(data$NOC)
noc$NOC <- as.character(noc$NOC)
data$Height <- as.numeric(data$Height)
data$Weight <- as.numeric(data$Weight)
data$Sex<-factor(data$Sex,levels=c("M","F"))
data$Season<-factor(data$Season,levels = c("Summer","Winter"))
data$Medal<-factor(data$Medal,levels = c("Gold","Silver","Bronze"))
#omit rows where either `Height`` or `Weight`` have missing values and save the new data
data<-na.omit(data, cols=c("Height", "Weight"))
sum(is.na(data))
# list the structure of data
str(data)
#Merge two datasets as "olympics", so we can use the NOC code as the primary key
# This has to be a left join since we want all participating countries to remain in the data even if their NOC-Country is not found in the master.
olympics<-left_join(data, noc, by="NOC")%>%filter(!is.na(region))
#replace `Team` with `Country` and remove the missing values because there are too many duplicates with small differences typos in the original `team` colunm
olympics<-select(olympics, -c("Team"))
#colnames(olympics)[colnames(olympics)=="region"] <- "Country"
#olympics<-na.omit(olympics, cols=c("Country"))
#athletes in summer and winter olympics
season=olympics%>%group_by(Season,Year,Sex)%>%summarize(total=n())
ggplot(season, aes(x=Year, y=total,color=Sex))+
geom_line(size=1.5)+
facet_wrap(~Season)+
xlab("Year")+ylab("Athletes")+ggtitle("Male and Female Athletes",subtitle = "Olympics 1896 to 2016 ")
#Male has increased from 2500 to 7500 per summer game since 1896. Female athletes has steep increase
#in numbers  from 2000 in 1980 games to 6000 athletes in 2016 games.
#Top 30 medal winners by Country
medals = olympics%>%filter(!is.na(Medal),Season=='Summer')
medals$notes = NULL
medals =medals%>%group_by(region)%>%summarize(total=n())%>%arrange(desc(total))%>%head(n=30)
medals$region <- factor(medals$region,levels = medals$region[order(medals$total)])
ggplot(medals,aes(region,total,color=region,fill=region)) +
geom_bar(position = "stack",  width =.6,stat="identity") +
coord_flip()+
geom_text(aes(label=total,hjust=-.03,  colour="black"),size=3)+
theme(panel.background=element_blank())+
scale_x_discrete() +
xlab("Country")+ylab("Medals")+
theme(legend.position = "none",
axis.text = element_text(size = 8,face="bold"),
plot.title = element_text(size=16,face = "bold")) +
ggtitle("Top medal winners by Country", subtitle= "Summer Olympics 1896 to 2016")
#Top medal get in 2016 Summer
Y <- olympics%>%filter(!is.na(Medal),Season=='Summer', sex=="F")
Y$notes = NULL
Y2016 =Y%>%filter(Year==2016)%>%group_by(region,Medal)%>%summarize(total=n())%>%arrange(desc(total))
Y2016 =spread(Y2016,Medal,total)
Y2016$Tm <- rowSums(Y2016[, c(2, 3, 4)])
Y2016 <-Y2016%>%arrange(desc(Tm))%>%head(n=35)
Y2016g <- gather(Y2016,Medal, Total,2:4)
Y2016g$region <- factor(Y2016$region,levels = Y2016$region[order(Y2016$Tm)])
ggplot(Y2016g,aes(region,Total,color=region,fill=region)) +
geom_bar(position = "stack",  width =.6,stat="identity") +
coord_flip()+
facet_wrap(~Medal)+
geom_text(aes(label=Total,hjust=-.03,  colour="black"),size=3)+
theme(axis.line = element_line(color = "orange",size=1))+
theme(panel.background=element_blank())+
scale_x_discrete() +
xlab("Team")+ylab("Medals")+
theme(legend.position = "none",
axis.text = element_text(size = 8,face="bold"),
plot.title = element_text(size=16,face = "bold")) +
ggtitle("Top Team medal winners ", subtitle = "Summer Olympics 2016")
#Top medal get in 2012 summer
Y2012 =Y%>%filter(Year==2012)%>%group_by(region,Medal)%>%summarize(total=n())%>%arrange(desc(total))
Y2012 =spread(Y2012,Medal,total)
Y2012$Tm <- rowSums(Y2012[, c(2, 3, 4)])
Y2012 <-Y2012%>%arrange(desc(Tm))%>%head(n=35)
Y2012g <- gather(Y2012,Medal, Total,2:4)
Y2012g$region <- factor(Y2012$region,levels = Y2012$region[order(Y2012$Tm)])
ggplot(Y2012g,aes(region,Total,color=region,fill=region)) +
geom_bar(position = "stack",  width =.6,stat="identity") +
coord_flip()+
facet_wrap(~Medal)+
geom_text(aes(label=Total,hjust=-.03,  colour="black"),size=3)+
theme(axis.line = element_line(color = "orange",size=1))+
theme(panel.background=element_blank())+
scale_x_discrete() +
xlab("Team")+ylab("Medals")+
theme(legend.position = "none",
axis.text = element_text(size = 8,face="bold"),
plot.title = element_text(size=16,face = "bold")) +
ggtitle("Top Team medal winners ", subtitle = "Summer Olympics 2012")
#Top medal get in 2008 summer
Y2008 =Y%>%filter(Year==2008)%>%group_by(region,Medal)%>%summarize(total=n())%>%arrange(desc(total))
Y2008 =spread(Y2008,Medal,total)
Y2008$Tm <- rowSums(Y2008[, c(2, 3, 4)])
Y2008 <-Y2008%>%arrange(desc(Tm))%>%head(n=35)
Y2008g <- gather(Y2008,Medal, Total,2:4)
Y2008g$region <- factor(Y2008$region,levels = Y2008$region[order(Y2012$Tm)])
ggplot(Y2008g,aes(region,Total,color=region,fill=region)) +
geom_bar(position = "stack",  width =.6,stat="identity") +
coord_flip()+
facet_wrap(~Medal)+
geom_text(aes(label=Total,hjust=-.03,  colour="black"),size=3)+
theme(axis.line = element_line(color = "orange",size=1))+
theme(panel.background=element_blank())+
scale_x_discrete() +
xlab("Team")+ylab("Medals")+
theme(legend.position = "none",
axis.text = element_text(size = 8,face="bold"),
plot.title = element_text(size=16,face = "bold")) +
ggtitle("Top Team medal winners ", subtitle = "Summer Olympics 2008")
#Top 6 countries(USA,Russia,Germany,Austrialia,China)
top=olympics%>%filter(olympics$region==c('USA','China'),Season=='Summer')
top=top%>%group_by(Sport,region)%>%summarize(total=sum(!is.na(Medal)))%>%arrange(desc(total))
top1=olympics%>%filter(olympics$region==c('Russia','Germany'),Season=='Summer')
top1=top1%>%group_by(Sport,region)%>%summarize(total=sum(!is.na(Medal)))%>%arrange(desc(total))
top2=olympics%>%filter(olympics$region==c('UK','Australia'),Season=='Summer')
top2=top2%>%group_by(Sport,region)%>%summarize(total=sum(!is.na(Medal)))%>%arrange(desc(total))
ggplot(top,aes(Sport,total,color=Sport,fill=Sport))+
geom_bar(position="stack",width=.6,stat="identity")+
coord_flip()+
facet_wrap(~region)+
geom_text(aes(label=total,hjust=-.03,  colour="black"),size=3)+
theme(axis.line = element_line(color = "orange",size=1))+
theme(panel.background=element_blank())+
scale_x_discrete() +
xlab("Sport")+ylab("Country")+
theme(legend.position = "none",
axis.text = element_text(size = 8,face="bold"),
plot.title = element_text(size=16,face = "bold")) +
ggtitle("Top sport winners ")
ggplot(top1,aes(Sport,total,color=Sport,fill=Sport))+
geom_bar(position="stack",width=.6,stat="identity")+
coord_flip()+
facet_wrap(~region)+
geom_text(aes(label=total,hjust=-.03,  colour="black"),size=3)+
theme(axis.line = element_line(color = "orange",size=1))+
theme(panel.background=element_blank())+
scale_x_discrete() +
xlab("Sport")+ylab("Country")+
theme(legend.position = "none",
axis.text = element_text(size = 8,face="bold"),
plot.title = element_text(size=16,face = "bold")) +
ggtitle("Top sport winners ")
ggplot(top2,aes(Sport,total,color=Sport,fill=Sport))+
geom_bar(position="stack",width=.6,stat="identity")+
coord_flip()+
facet_wrap(~region)+
geom_text(aes(label=total,hjust=-.03,  colour="black"),size=3)+
theme(axis.line = element_line(color = "orange",size=1))+
theme(panel.background=element_blank())+
scale_x_discrete() +
xlab("Sport")+ylab("Country")+
theme(legend.position = "none",
axis.text = element_text(size = 8,face="bold"),
plot.title = element_text(size=16,face = "bold")) +
ggtitle("Top sport winners ")
#Height /medal
height= olympics%>%filter(Season=='Summer')
height$Medal=ifelse(is.na(height$Medal),"DNW",ifelse(height$Medal=="Gold","Gold",ifelse(height$Medal=="Silver","Silver","Bronze")))
ggplot(height,aes(x=Height))+
geom_histogram(aes(group=Medal,colour=Medal),alpha=0.01,bins = 30)+
facet_wrap(~Sex)+
scale_y_continuous(name =  "Density")+
theme(panel.background=element_blank())+
theme(axis.line = element_line(color = "orange",size=1))+
theme(legend.position = "bottom",
axis.text = element_text(size = 8,face = "bold"),
plot.title = element_text(size=12,face = "bold")) +
ggtitle("Height of all Athletes and Medal winners", subtitle = "Summer Olympics 1896 to 2016")
#Weight/medal
ggplot(height,aes(x=Weight))+
geom_histogram(aes(group=Medal,colour=Medal),alpha=0.01,bins = 30)+
facet_wrap(~Sex)+
scale_y_continuous(name =  "Density")+
theme(panel.background=element_blank())+
theme(axis.line = element_line(color = "orange",size=1))+
theme(legend.position = "bottom",
axis.text = element_text(size = 8,face = "bold"),
plot.title = element_text(size=12,face = "bold")) +
ggtitle("Weight of all Athletes and Medal winners", subtitle = "Summer Olympics 1896 to 2016")
#age/medal
ggplot(height,aes(x=Age))+
geom_histogram(aes(group=Medal,colour=Medal),alpha=0.01,bins = 30)+
facet_wrap(~Sex)+
scale_y_continuous(name =  "Density")+
theme(panel.background=element_blank())+
theme(axis.line = element_line(color = "orange",size=1))+
theme(legend.position = "bottom",
axis.text = element_text(size = 8,face = "bold"),
plot.title = element_text(size=12,face = "bold")) +
ggtitle("age of all Athletes and Medal winners", subtitle = "Summer Olympics 1896 to 2016")
#sex
plot <-olympics%>% group_by(Year, Sex) %>% filter(Season=='Summer') %>% summarize(Count=n()) %>% group_by(Year)
ggplot(plot, aes(x=Year, y=Count, group=Sex)) +
geom_col(aes(fill=Sex)) +
scale_x_continuous(breaks=plot$Year)+
theme(legend.position="top", legend.text=element_text(size=5),axis.text.x=element_text(size=8, angle=90,vjust=0,hjust=1))+
labs(title="Sex ratio over the time", x="Years", y="Num. Participants")
# Subset to Games of interest and count athletes from each country
year1 <- olympics %>%
filter(Games == "1932 Summer") %>%
group_by(region) %>%
summarize(year1 = length(unique(ID)))
year2 <- olympics %>%
filter(Games == "1980 Summer") %>%
group_by(region) %>%
summarize(year2 = length(unique(ID)))
year3 <- olympics %>%
filter(Games == "2012 Summer") %>%
group_by(region) %>%
summarize(year3 = length(unique(ID)))
# Create data for mapping
world <- map_data("world")
mapdat <- tibble(region=unique(world$region))
mapdat <- mapdat %>%
left_join(year1, by="region") %>%
left_join(year2, by="region") %>%
left_join(year3, by="region")
mapdat[is.na(mapdat)]<-0
world <- left_join(world, mapdat, by="region")
# Plot: 1932 Summer
ggplot(world, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = year1)) +
labs(title = "1932 Summer",
x = NULL, y=NULL) +
theme(axis.ticks = element_blank(),
axis.text = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_colourbar(title="Athletes")) +
scale_fill_gradient(low="steelblue",high = "orange")
# Plot: 1980 Summer
ggplot(world, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = year2)) +
labs(title = "1980 Summer",
x = NULL, y = NULL) +
theme(axis.ticks = element_blank(),
axis.text = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_colourbar(title="Athletes")) +
scale_fill_gradient(low="steelblue",high = "orange")
# Plot:  2012 Summer
ggplot(world, aes(x = long, y = lat, group = group)) +
geom_polygon(aes(fill = year3)) +
labs(title = "2012 Summer",
x = NULL, y = NULL) +
theme(axis.ticks = element_blank(),
axis.text = element_blank(),
panel.background = element_rect(fill = "white"),
plot.title = element_text(hjust = 0.5)) +
guides(fill=guide_colourbar(title="Athletes")) +
scale_fill_gradient(low="steelblue",high = "orange")
##
##
##
###model
#linear regression
#install.packages('dummies')
#library('dummies')
df<-olympics%>%select(Age,Height,Weight,Year,Medal,Sex,Season)
df$Medal<-as.character(df$Medal)
df$Medal[is.na(df$Medal)]<- 0
df$Medal[df$Medal=="Gold"]<-1
df$Medal[df$Medal=="Silver"]<-1
df$Medal[df$Medal=="Bronze"]<-1
df$Medal<-as.numeric(df$Medal)
df$Sex<-as.character(df$Sex)
df$Season<-as.character(df$Season)
df$Season[df$Season=="Summer"]<-1
df$Season[df$Season=="Winter"]<-0
df$Sex[df$Sex=="M"]<-1
df$Sex[df$Sex=="F"]<-0
df$Sex<-as.numeric(df$Sex)
df$Season<-as.numeric(df$Season)
sapply(df,class)
na.omit(df)
head(df)
df$Medal<-as.numeric((df$Medal))
p<-lm(Medal~Age+Height+Weight+Year+Sex+Season,data=df)
summary(p)
plot(p)
#knn
library("class")
library("MASS")
set.seed(123)
n = nrow(df)
n_train = floor(n/2)
index_train <- sample(1:n,n_train,replace=FALSE)
train= df[1:index_train[3],]
test= df[index_train[3]:nrow(df),]
model=lda(Medal~Age+Height+Weight+Year+Sex+Season,data=df)
predict=predict(model, train)
#
knn.pred=knn(test,train,cl=test$Age,k=5)
table<-table(knn.pred,train$Age)
table
acc4= sum(diag(table))/sum(table)
1-acc4
#
fit=glm(Medal~Age+Height+Weight+Year+Sex+Season,family=binomial,data=df)
predict1<-predict.glm(fit,train,type="response")
ta<-table(predict1,train$indicator)
ta
acc5=sum(diag(ta))/sum(ta)
1-acc5
#Top medal get in 2016 Summer
Y <- olympics%>%filter(!is.na(Medal),Season=='Summer', sex=="F")
# Load athletes_events data
data <- read.csv(file="athlete_events.csv", header=TRUE, sep=",")
setwd("~/ds202_project/ds202_project")
# Load athletes_events data
data <- read.csv(file="athlete_events.csv", header=TRUE, sep=",")
noc <- read.csv(file="noc_regions.csv", header=TRUE)
#clean data
#check NA
sum(is.na(data))
sum(is.na(data$Height))
sum(is.na(data$Weight))
sapply(data, class)
sapply(noc,class)
#change the missing values of "Medal" to "DNW" (Did Not Win)
#data$Medal <- as.character(data$Medal)
#data$Medal[is.na(data$Medal)]<- "DNW"
#data$Medal <- as.factor(data$Medal)
#change `ID`, `Name`, `Event`, `NOC` to character, `Height` to numeric, sex and game season in levels
data$ID <- as.character(data$ID)
data$Name <- as.character(data$Name)
data$Event <- as.character(data$Event)
data$NOC <- as.character(data$NOC)
noc$NOC <- as.character(noc$NOC)
data$Height <- as.numeric(data$Height)
data$Weight <- as.numeric(data$Weight)
data$Sex<-factor(data$Sex,levels=c("M","F"))
data$Season<-factor(data$Season,levels = c("Summer","Winter"))
data$Medal<-factor(data$Medal,levels = c("Gold","Silver","Bronze"))
#omit rows where either `Height`` or `Weight`` have missing values and save the new data
data<-na.omit(data, cols=c("Height", "Weight"))
sum(is.na(data))
# list the structure of data
str(data)
#Merge two datasets as "olympics", so we can use the NOC code as the primary key
# This has to be a left join since we want all participating countries to remain in the data even if their NOC-Country is not found in the master.
olympics<-left_join(data, noc, by="NOC")%>%filter(!is.na(region))
#replace `Team` with `Country` and remove the missing values because there are too many duplicates with small differences typos in the original `team` colunm
olympics<-select(olympics, -c("Team"))
#colnames(olympics)[colnames(olympics)=="region"] <- "Country"
#olympics<-na.omit(olympics, cols=c("Country"))
#athletes in summer and winter olympics
season=olympics%>%group_by(Season,Year,Sex)%>%summarize(total=n())
ggplot(season, aes(x=Year, y=total,color=Sex))+
geom_line(size=1.5)+
facet_wrap(~Season)+
xlab("Year")+ylab("Athletes")+ggtitle("Male and Female Athletes",subtitle = "Olympics 1896 to 2016 ")
#Male has increased from 2500 to 7500 per summer game since 1896. Female athletes has steep increase
#in numbers  from 2000 in 1980 games to 6000 athletes in 2016 games.
#Top 30 medal winners by Country
medals = olympics%>%filter(!is.na(Medal),Season=='Summer')
medals$notes = NULL
medals =medals%>%group_by(region)%>%summarize(total=n())%>%arrange(desc(total))%>%head(n=30)
medals$region <- factor(medals$region,levels = medals$region[order(medals$total)])
ggplot(medals,aes(region,total,color=region,fill=region)) +
geom_bar(position = "stack",  width =.6,stat="identity") +
coord_flip()+
geom_text(aes(label=total,hjust=-.03,  colour="black"),size=3)+
theme(panel.background=element_blank())+
scale_x_discrete() +
xlab("Country")+ylab("Medals")+
theme(legend.position = "none",
axis.text = element_text(size = 8,face="bold"),
plot.title = element_text(size=16,face = "bold")) +
ggtitle("Top medal winners by Country", subtitle= "Summer Olympics 1896 to 2016")
#Top medal get in 2016 Summer
Y <- olympics%>%filter(!is.na(Medal),Season=='Summer', sex=="F")
Y$notes = NULL
Y2016 =Y%>%filter(Year==2016)%>%group_by(region,Medal)%>%summarize(total=n())%>%arrange(desc(total))
Y2016 =spread(Y2016,Medal,total)
Y2016$Tm <- rowSums(Y2016[, c(2, 3, 4)])
Y2016 <-Y2016%>%arrange(desc(Tm))%>%head(n=35)
Y2016g <- gather(Y2016,Medal, Total,2:4)
Y2016g$region <- factor(Y2016$region,levels = Y2016$region[order(Y2016$Tm)])
ggplot(Y2016g,aes(region,Total,color=region,fill=region)) +
geom_bar(position = "stack",  width =.6,stat="identity") +
coord_flip()+
facet_wrap(~Medal)+
geom_text(aes(label=Total,hjust=-.03,  colour="black"),size=3)+
theme(axis.line = element_line(color = "orange",size=1))+
theme(panel.background=element_blank())+
scale_x_discrete() +
xlab("Team")+ylab("Medals")+
theme(legend.position = "none",
axis.text = element_text(size = 8,face="bold"),
plot.title = element_text(size=16,face = "bold")) +
ggtitle("Top Team medal winners ", subtitle = "Summer Olympics 2016")
#Top medal get in 2016 Summer
Y <- olympics%>%filter(!is.na(Medal),Season=='Summer', sex=="F")
#Top medal get in 2016 Summer
Y <- olympics%>%filter(!is.na(Medal),Season=='Summer', Sex=="F")
Y$notes = NULL
Y2016 =Y%>%filter(Year==2016)%>%group_by(region,Medal)%>%summarize(total=n())%>%arrange(desc(total))
Y2016 =spread(Y2016,Medal,total)
Y2016$Tm <- rowSums(Y2016[, c(2, 3, 4)])
Y2016 <-Y2016%>%arrange(desc(Tm))%>%head(n=35)
Y2016g <- gather(Y2016,Medal, Total,2:4)
Y2016g$region <- factor(Y2016$region,levels = Y2016$region[order(Y2016$Tm)])
ggplot(Y2016g,aes(region,Total,color=region,fill=region)) +
geom_bar(position = "stack",  width =.6,stat="identity") +
coord_flip()+
facet_wrap(~Medal)+
geom_text(aes(label=Total,hjust=-.03,  colour="black"),size=3)+
theme(axis.line = element_line(color = "orange",size=1))+
theme(panel.background=element_blank())+
scale_x_discrete() +
xlab("Team")+ylab("Medals")+
theme(legend.position = "none",
axis.text = element_text(size = 8,face="bold"),
plot.title = element_text(size=16,face = "bold")) +
ggtitle("Top Team medal winners ", subtitle = "Summer Olympics 2016")
#sex
plot <-olympics%>% group_by(Year, Sex) %>% filter(Season=='Summer') %>% summarize(Count=n()) %>% group_by(Year)
ggplot(plot, aes(x=Year, y=Count, group=Sex)) +
geom_col(aes(fill=Sex)) +
scale_x_continuous(breaks=plot$Year)+
theme(legend.position="top", legend.text=element_text(size=5),axis.text.x=element_text(size=8, angle=90,vjust=0,hjust=1))+
labs(title="Sex ratio over the time", x="Years", y="Num. Participants")
#Top medal get in 2016 Summer
Y <- olympics%>%filter(!is.na(Medal),Season=='Summer', Sex=="F")
Y$notes = NULL
Y2016 =Y%>%filter(Year==2016)%>%group_by(region,Medal)%>%summarize(total=n())%>%arrange(desc(total))
Y2016 =spread(Y2016,Medal,total)
Y2016$Tm <- rowSums(Y2016[, c(2, 3, 4)])
Y2016 <-Y2016%>%arrange(desc(Tm))%>%head(n=35)
Y2016g <- gather(Y2016,Medal, Total,2:4)
Y2016g$region <- factor(Y2016$region,levels = Y2016$region[order(Y2016$Tm)])
ggplot(Y2016g,aes(region,Total,color=region,fill=region)) +
geom_bar(position = "stack",  width =.6,stat="identity") +
coord_flip()+
facet_wrap(~Medal)+
geom_text(aes(label=Total,hjust=-.03,  colour="black"),size=3)+
theme(axis.line = element_line(color = "orange",size=1))+
theme(panel.background=element_blank())+
scale_x_discrete() +
xlab("Team")+ylab("Medals")+
theme(legend.position = "none",
axis.text = element_text(size = 8,face="bold"),
plot.title = element_text(size=16,face = "bold")) +
ggtitle("Top Team medal winners ", subtitle = "Summer Olympics 2016")
